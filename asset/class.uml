@startuml

title Relationships - Class Diagram
package "Elements réels" <<Frame>> {
    class Domaine
    class Machine
}
package "Representation des états" <<Frame>> {
    class Etat
    class Etat_Domaine
    class Etat_Machine
    
    package "Etat du domaine" <<Frame>> {
        Etat_Domaine <|-- Etat_D_Libre: Inheritance
        Etat_Domaine <|-- Etat_D_Risque: Inheritance
        Etat_Domaine <|-- Etat_D_Occupe: Inheritance
        Etat_Domaine <|-- Etat_D_Collision: Inheritance
    }
    
    package "Etat des machines" <<Frame>>{
        Etat_Machine <|-- Etat_M_Idle: Inheritance
        Etat_Machine <|-- Etat_M_Attente_O: Inheritance
        Etat_Machine <|-- Etat_M_Attente_C: Inheritance
        Etat_Machine <|-- Etat_M_Initial: Inheritance
        Etat_Machine <|-- Etat_M_Fin_initial: Inheritance
        Etat_Machine <|-- Etat_M_Transmition: Inheritance
    }
}

package "Representation des évenements" <<Frame>>{
    Class Event
    Event <|-- Etat_Never: Inheritance
    Event <|-- Etat_Timed: Inheritance
}
Etat <|-- Etat_Domaine: Inheritance
Etat <|-- Etat_Machine: Inheritance
Domaine "1" *-up- "many" Machine: Composition
Domaine "1" *-- "1" Etat_Domaine: Composition
Machine "1" *-- "1" Etat_Machine: Composition

Domaine : +time
Domaine : +machines
Domaine : +etat
Domaine : +reagir(Event)
Domaine : +Events
Domaine : +goto_next_event()

Machine : +domaine
Machine : +etat
Machine : +reagir(Event)

Etat : +etat_suivant(Event)
Etat : +temps_debut

Etat_Machine : +machine
Etat_Machine : +parlant

Etat_Domaine : +domaine
Etat_Domaine : +visiblement_libre
Etat_Domaine : +reelement_libre
Etat_Domaine : +machines_parlantes[]
Machine "0..*" o-- "1" Etat_Domaine

Etat_D_Collision : +Nombre_de_parlantes

Etat_Machine : +event_fin
@enduml